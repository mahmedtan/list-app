{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["Head","Body","props","rows","charactersData","map","item","index","key","name","job","onClick","removeCharacter","Table","Form","handleChange","event","setState","target","value","submitForm","handleSubmit","state","htmlFor","type","id","this","onChange","Component","App","characters","indeX","filter","character","concat","className","ReactDOM","render","document","getElementById"],"mappings":"+MAEMA,EAAO,WACX,OACE,+BACE,4BACE,oCACA,sCAKFC,EAAO,SAACC,GACZ,IAAMC,EAAOD,EAAME,eAAeC,KAAI,SAACC,EAAMC,GAC3C,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAKG,MACV,4BAAKH,EAAKI,KACV,4BACE,4BAAQC,QAAS,kBAAIT,EAAMU,gBAAgBL,KAA3C,eAKR,OAAO,+BAAQJ,IAcFU,EAXD,SAAAX,GACV,OACE,6BACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAME,eAAgBF,EAAME,eAAgBQ,gBAAiBV,EAAMU,qB,OC9BxDE,E,kDACnB,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAORa,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOT,KAAOO,EAAME,OAAOC,SAVnB,EAanBC,WAAa,WACX,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKL,SAAS,CACZR,KAAM,GACNC,IAAK,MAdP,EAAKY,MAAQ,CACXb,KAAM,GACNC,IAAK,IALU,E,qDAsBjB,OACE,8BACE,2BAAOa,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLf,KAAK,OACLgB,GAAG,OACHN,MAAOO,KAAKJ,MAAMb,KAClBkB,SAAUD,KAAKX,eAEjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLf,KAAK,MACLgB,GAAG,MACHN,MAAOO,KAAKJ,MAAMZ,IAClBiB,SAAUD,KAAKX,eAEjB,2BAAOS,KAAK,SAASL,MAAM,SAASR,QAASe,KAAKN,kB,GAzCxBQ,aCEbC,E,4MAEnBP,MAAQ,CACNQ,WAAY,CACV,CACErB,KAAM,UACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,mBAEP,CACED,KAAM,SACNC,IAAK,e,EAKXE,gBAAiB,SAAAmB,GAAU,IAChBD,EAAa,EAAKR,MAAlBQ,WACR,EAAKb,SAAS,CACVa,WAAYA,EAAWE,QAAO,SAAC1B,EAAKC,GAC7C,OAAOA,IAAQwB,Q,EAIfV,aAAc,SAAAY,GACV,EAAKhB,SAAS,CACVa,WAAY,EAAKR,MAAMQ,WAAWI,OAAOD,M,uDAI7C,OACE,yBAAKE,UAAU,aACb,kBAAC,EAAD,CACE/B,eAAgBsB,KAAKJ,MAAMQ,WAC9BlB,gBAAiBc,KAAKd,kBAErB,kBAAC,EAAD,CAAMS,aAAcK,KAAKL,oB,GA3CAO,aCCjCQ,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U","file":"static/js/main.d831dcfa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Head = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\nconst Body = (props) => {\n  const rows = props.charactersData.map((item, index) => {\n    return (\n      <tr key={index}>\n        <td>{item.name}</td>\n        <td>{item.job}</td>\n        <td>\n          <button onClick={()=>props.removeCharacter(index)} >Delete</button>\n        </td>\n      </tr>\n    );\n  });\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = props => {\n    return (\n      <div>\n        <table>\n          <Head />\n          <Body charactersData={props.charactersData} removeCharacter={props.removeCharacter}/>\n        </table>\n      </div>\n    );\n\n}\nexport default Table;\n","import React, { Component } from \"react\";\n\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      job: \"\",\n    };\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState({\n      name: \"\",\n      job: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={this.state.job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nexport default class App extends Component {\n\n  state = {\n    characters: [\n      {\n        name: \"Charlie\",\n        job: \"Janitor\",\n      },\n      {\n        name: \"Mac\",\n        job: \"Bouncer\",\n      },\n      {\n        name: \"Dee\",\n        job: \"Aspring actress\",\n      },\n      {\n        name: \"Dennis\",\n        job: \"Bartender\",\n      },\n    ],\n  };\n\n  removeCharacter= indeX => {\n     const  {characters}= this.state;\n     this.setState({\n         characters: characters.filter((item,index)=>{\nreturn index!==indeX\n         }),\n     })\n  };\nhandleSubmit= character=>{\n    this.setState({\n        characters: this.state.characters.concat(character)\n    })\n}\n  render() {\n    return (\n      <div className=\"container\">\n        <Table\n          charactersData={this.state.characters}\n       removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}